from __future__ import print_function

import json
import boto3

ecs = boto3.client('ecs')
s3 = boto3.client('s3')

print('Loading function...')

def lambda_handler(event, context):

    print ('Cluster : ' + event['cluster'])
    print ('Service : ' + event['service'])
    print ('TaskDef : ' + event['taskDefinition'])

    if 'image' in event:
        imageFlag = True
        print ('image: ' + event['image'])
    else:
        imageFlag = False
        print ('image not informed. Using default value.')

    print ('containerDefinitionS3Bucket: ' + event['containerDefinitionS3Bucket'])
    print ('containerDefinitionS3Key: ' + event['containerDefinitionS3Key'])
    
    #Get general settings from S3
    response = s3.get_object(Bucket=event['containerDefinitionS3Bucket'], Key=event['containerDefinitionS3Key'])
    containerDefinitionDetails = json.loads(response['Body'].read(response['ContentLength']))
    
    if not containerDefinitionDetails:
        message = 'Failed to load container definition template from S3. Verify your bucket and key'
        print (message)
        return message

    #If the request event received a new image name, use the received image instead of default value set in S3 template
    if imageFlag:
        if event['image'] and event['image'] != '':
            containerDefinitionDetails['containerDefinitions'][0]['image']  = event['image']

    #Register task definition
    response = ecs.register_task_definition(
        family=event['taskDefinition'],
        containerDefinitions=containerDefinitionDetails['containerDefinitions'])
    
    if response['ResponseMetadata']['HTTPStatusCode'] != 200:
        message = 'Failed to register new task.'
        print (message)
        return message
    
    taskRevision = str(response['taskDefinition']['family']) + ':' + str(response['taskDefinition']['revision'])
    
    #TODO:update service
    response = ecs.update_service(
        cluster=event['cluster'],
        service=event['service'],
        taskDefinition=taskRevision)
    
    message = 'New task ' + taskRevision + ' started. Please check ECS Cluster ' + event['cluster'] + ', service ' + event['service']
    
    print(message)
    return message